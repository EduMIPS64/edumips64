/*
 * EduMips64 Gradle build configuration
 */

plugins {
    id 'java'
    id 'application'
    id "com.github.johnrengelman.shadow" version "4.0.3"    // Shadow plugin: to build the uber/fat/standalone jar
}

repositories {
    jcenter()
}

dependencies {
    implementation 'com.google.gwt:gwt-user:2.8.2'
    implementation 'javax.help:javahelp:2.0.05'
    testImplementation 'junit:junit:4.12'
}

mainClassName = 'org.edumips64.Main'
version = "1.2.5"

/*
 * Fat / standalone jar tasks
 */
jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

shadowJar {
   classifier = 'standalone'
}

// CLI standalone jar task
// https://github.com/johnrengelman/shadow/issues/138#issuecomment-446238613
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
task cliJar(type: ShadowJar, dependsOn: shadowJar) {
    mergeServiceFiles()
    classifier = 'cli'
    manifest {
        attributes 'Main-Class': 'org.edumips64.MainCLI'
    }
    group = 'build'
    // TODO: remove GUI-related source files from sourceSet of CLI jar
    from zipTree(shadowJar.archivePath)
    description = 'Assemble the CLI jar file'
    configurations = [project.configurations.runtime]
}
assemble.dependsOn(cliJar)  // make sure to execute cliJar upon assemble


/* 
 * Documentation tasks
 */
task htmlDocsIt(type:Exec) {
    workingDir "${projectDir}/docs/user/en/src"
    commandLine "make", "html", "BUILDDIR=${buildDir}/docs/en", "SPHINXOPTS=-N -a -E -Q"
}
task htmlDocsEn(type:Exec) {
    workingDir "${projectDir}/docs/user/it/src"
    commandLine "make", "html", "BUILDDIR=${buildDir}/docs/it", "SPHINXOPTS=-N -a -E -Q"
}
task pdfDocsEn(type:Exec) {
    workingDir "${projectDir}/docs/user/en/src"
    commandLine "make", "latexpdf", "BUILDDIR=${buildDir}/docs/en", "LATEXMKOPTS=-xelatex", "SPHINXOPTS=-N -a -E -Q"
}
task pdfDocsIt(type:Exec) {
    workingDir "${projectDir}/docs/user/it/src"
    commandLine "make", "latexpdf", "BUILDDIR=${buildDir}/docs/it", "LATEXMKOPTS=-xelatex", "SPHINXOPTS=-N -a -E -Q"
}
// Catch-all task for documentation
task allDocs(type: GradleBuild) {
    tasks = ['htmlDocsIt', 'htmlDocsEn', 'pdfDocsEn', 'pdfDocsIt']
    description = 'Run all documentation tasks'
}
// Include allDocs task in check task
check.dependsOn(allDocs)